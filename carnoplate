import cv2
import pytesseract
pytesseract.pytesseract.tesseract_cmd = r"C:\Program Files\Tesseract-OCR\Tesseract.exe"
image = cv2.imread("C:/Users/Personal/Desktop/images/m.jpeg")
height, width = image.shape[:2]
image = cv2.resize(image, (900, 950))
cv2.imshow("Image", image)
cv2.waitKey(0)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
cv2.imshow("1 -Grayscale Coversion", gray)
cv2.waitKey(0)
gray = cv2.bilateralFilter(gray, 11, 17, 17)
cv2.imshow("2 -bilateral Coversion", gray)
cv2.waitKey(0)
edged = cv2.Canny(gray, 170, 200)
cv2.imshow("3 -canny edges Coversion", edged)
cv2.waitKey(0)
cnts, new = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
img1 = image.copy()
cv2.drawContours(img1, cnts, -1, (0, 255, 0), 3)
cv2.imshow("4- All contours", img1)
cv2.waitKey(0)
cnts = sorted(cnts, key=cv2.contourArea, reverse=True)[:30]
NumberPlatecnt = None
img2 = image.copy()
cv2.drawContours(img2, cnts, -1, (0, 255, 0), 3)
cv2.imshow("5- top 30 contours", img2)
cv2.waitKey(0)
count = 0
idx = 7
for c in cnts:
    peri = cv2.arcLength(c, True)
    approx = cv2.approxPolyDP(c, 0.02 * peri, True)
    # print ("approx = ", approx)
    if len(approx) == 4:  # select contours with 4 corners
        NumberPlatecnt = approx  # this is our approximate number plate
    # crop and store
    x, y, w, h = cv2.boundingRect(c)  # this will find out the co-ord
    new_img = gray[y:y + h, x:x + w]  # create new image
    cv2.imwrite('F:/draft/ci/' + str(idx) + '.png', new_img)  # store new image
    idx += 1
    break
cv2.drawContours(image, NumberPlatecnt, -1, (0, 255, 0), 3)
cv2.imshow("final image", image)
cv2.waitKey(0)
Cropped_img_loc = 'F:/draft/ci/7.png'
cv2.imshow("cropped image ", cv2.imread(Cropped_img_loc))
text = pytesseract.image_to_string(Cropped_img_loc, lang='eng')
print("Number is : ", text)
cv2.waitKey(0)
